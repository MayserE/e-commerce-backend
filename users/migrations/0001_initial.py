# Generated by Django 5.2 on 2025-04-09 03:57

import django.contrib.auth.models
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField()),
                ('updated_at', models.DateTimeField()),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('password', models.TextField()),
                ('role', models.CharField(choices=[('ADMIN', 'Admin'), ('BRANCH_OFFICE_MEMBER', 'Branch Office Member'), ('CLIENT', 'Client')], max_length=32)),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('INACTIVE', 'Inactive')], max_length=32)),
                ('name', models.CharField(max_length=128)),
                ('last_name', models.CharField(max_length=128)),
                ('phone_number', models.CharField(blank=True, max_length=32, null=True)),
                ('document_type', models.CharField(choices=[('CI', 'Ci'), ('NIT', 'Nit'), ('FOREIGN_PASSPORT', 'Foreign Passport')], max_length=16)),
                ('document_number', models.CharField(max_length=32)),
                ('birthdate', models.DateField()),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
